name: Continuous Integration
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      CI_COMMIT_MESSAGE: Continuous Integration For Changing Tag in Test Repo
      CI_COMMIT_AUTHOR: Annaliskirwa
      CI_COMMIT_EMAIL: annaliskirwa@gmail.com
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
        repository: Annaliskirwa/_Test
        ref: 'master'
    - name: Clone the test repository
      run: |
        git clone https://github.com/Annaliskirwa/_Test.git
        # git clone https://Annaliskirwa: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@github.com/Annaliskirwa/_Test.git
        echo "Cloned the repository"
    - name: Updating the image tags for master
      run: |
        ls -la
        echo "Switching folders"
        cd _Test
        ls -la
        git switch master
        echo "Switched branch to master"
    - name: Update image tag for values.yaml file
      run: |
        cd _Test
        echo "Trying to update image tags"
        pwd
        if [ -f values.yaml ];
        ls -la
          then sed -ri '1,/^(\s*)(tag*)/ s/^(\s*)(tag*:[[:blank:]]*).*/\1tag: "today"/'  values.yaml;
        fi
        echo "updated the image tag to today"
        cat values.yaml
    - name: Commit the changes
      run: |
        cd _Test
        pwd
        ls -la
        cat values.yaml
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
        git add values.yaml
        git commit -am "${{ env.CI_COMMIT_MESSAGE }}"
        echo "Committed successfully"
        # git remote set-url origin https://github.com/Annaliskirwa/_Test.git
        # git push origin master
        git push https://${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}@github.com/Annaliskirwa/_Test.git origin master
        # echo "Pushed successfully"
    # - name: Set the remote origin
    #   run: |
    #     git fetch --unshallow https://github.com/Annaliskirwa/_Test.git
    #     git remote remove origin
    #     git remote add origin https://github.com/Annaliskirwa/_Test.git
    #     echo "Remote origin has been set"
    #     git config pull.rebase false
    #     git pull origin master --allow-unrelated-histories
    #     echo "Merged unrelated histories"
    #     # git fetch --unshallow origin/master
    #     # git push origin master
    #     git push --set-upstream origin master --force
    #     echo "Pushed successfully"
    

